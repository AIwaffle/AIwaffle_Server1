* API Documentation
  For each API, we use POST to deliver form data, and use json for passing of
  data structures. The response is a json string.
** User
*** Register a new user
    POST /api/auth/register
**** Form data
| Name     | Format | Description                                        |
|----------+--------+----------------------------------------------------|
| username | string | The username of the user                           |
| password | string | The password of the user (or hash of the password) |
**** Response
| Name    | Format | Description                                  |
|---------+--------+----------------------------------------------|
| success | bool   | Whether the register is success              |
| uuid    | string | The uuid of the user (only when success)     |
| reason  | string | Human readable reason of failure (when fail) |
*** Login an existing user
    POST /api/auth/login
**** Form data
     See POST /api/auth/register
**** Response
     400 error when the username and/or password is not valid.
| Name    | Format | Description                            |
|---------+--------+----------------------------------------|
| uuid    | string | The uuid of the user                   |
| expires | float  | The timestamp when the session expires |
| token   | string | The token of the session               |
** Blog
***  Get all blogs
    GET /api/blog/all
**** Response
    A json dict, with post_id as key and post object as value.

    Post object:
| Name        | Format              | Description            |
|-------------+---------------------+------------------------|
| id          | int                 | The id of the post     |
| author_uuid | string              | The uuid of the author |
| created     | datetime: isoformat | The created time       |
| title       | string              | The title of the post  |
| body        | string              | The body of the post   |
*** Get one post
    POST /api/blog/get
**** JSON data
| Name | Format | Description        |
|------+--------+--------------------|
| id   | int    | The id of the post |
**** Response
     The post object(json), when the post is found
     
     404 when the post is not found
*** Create
    POST /api/blog/create
**** JSON data
| Name    | Format | Description                    |
|---------+--------+--------------------------------|
| uuid    | string | The uuid of the user           |
| expires | float  | The expire time of the session |
| token   | string | The token of the session       |
| title   | string | The title of the post          |
| body    | string | The body of the post           |
**** Response 
     The id of the post when success
*** Delete
    POST /api/blog/delete
*** JSON data
| Name    | Format | Description                    |
|---------+--------+--------------------------------|
| uuid    | string | The uuid of the user           |
| expires | float  | The expire time of the session |
| token   | string | The token of the session       |
| id      | int    | The id of the post             |
**** Response
     true when the post was successfully deleted
** Model
*** New session
    POST /api/model/new
**** Response
| Name | Format | Description                         |
|------+--------+-------------------------------------|
|      | string | The id of the created model session |
*** Iterate one step
    POST /api/model/iter
**** JSON data
| Name          | Format | Description                  |
|---------------+--------+------------------------------|
| session_id    | string | The id of the model session  |
| learning_rate | float  | The learning rate (optional) |
**** Response
| Name     | Format      | Description                                          |
|----------+-------------+------------------------------------------------------|
| W        | float[][][] | The weight matrix                                    |
| dW       | float[][][] | The gradient matrix                                  |
| A        | float[][]   | Predicted value                                      |
| loss     | float[]     | The loss record for every few steps (50 for default) |
| eval     | float[]     | The eval record for every few steps                  |
| avg_loss | float       | The average loss                                     |
